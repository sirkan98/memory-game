{"version":3,"sources":["components/Time.js","assets/pikachu.gif","assets/alien.gif","components/Game.js","components/Option.js","App.js","index.js"],"names":["Time","timeLeft","setTimeLeft","useState","setGameFinish","myTimer","timesRun","setInterval","clearInterval","time","useEffect","localStorage","setItem","listaPalabrasUtilizadas","intentos","tiempoRestante","Game","palabras","Math","floor","random","length","randomWord","setRandomWord","Number","getItem","numeroAciertos","setNumeroAciertos","gameFinish","winner","setWinner","push","nuevaPalabra","console","log","some","v","includes","i","ref","current","classList","add","remove","firstChild","toggle","setNoText","id","value","setTimeout","error","clearTimeout","handleClickButton","e","target","text","span","object","newArray","noText","num","handleReset","window","location","reload","useMemo","Array","fill","map","React","createRef","className","onClick","src","alien","width","alt","pikachu","Option","option","setOption","showContent","setShowContent","shuffle","array","temporaryValue","randomIndex","currentIndex","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d4a5b17.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport const Time = ({ timeLeft, setTimeLeft }) => {\n\n    const [gameFinish, setGameFinish] = useState(false);\n\n    let timer;\n\n    const myTimer = () => {\n\n        let timesRun = 0;\n\n        timer = setInterval(() => {\n\n            if (timesRun === timeLeft) {\n                setGameFinish(true);\n                clearInterval(myTimer);\n            } else {\n                timesRun++;\n                setTimeLeft(time => time - 1);\n            }\n\n        }, 1000);\n\n    }\n\n    useEffect(() => {\n        myTimer();\n        return () => {\n            clearInterval(myTimer);\n        }\n    }, [])\n\n    return (\n        <>\n            {timeLeft}\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/pikachu.da134cd0.gif\";","export default __webpack_public_path__ + \"static/media/alien.18c2ba4b.gif\";","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { Time } from './Time';\nimport './game.css';\nimport pikachu from '../assets/pikachu.gif';\nimport alien from '../assets/alien.gif';\n\n// let palabras = [\"Elefante\", \"Caracol\", \"Kira\", \"Coli\", \"León\", \"Mastodonte\", \"Delfín\", \"Perro\", \"Gato\"];\n\n// shuffle(palabras);\n\nlocalStorage.setItem(\"numeroAciertos\", 0);\n\nlet listaPalabrasUtilizadas = [];\n\nlet intentos = 0;\n\nlet tiempoRestante = 0;\n\nexport const Game = ({ palabras }) => {\n\n    const [timeLeft, setTimeLeft] = useState(100);\n\n    const [randomWord, setRandomWord] = useState(palabras[Math.floor(Math.random() * palabras.length)]);\n\n    const [numeroAciertos, setNumeroAciertos] = useState(Number(localStorage.getItem(\"numeroAciertos\")));\n\n    const [gameFinish, setGameFinish] = useState(false);\n\n    const [winner, setWinner] = useState(false);\n\n    useEffect(() => {\n        if (numeroAciertos === 9) {\n            tiempoRestante = timeLeft;\n            setWinner(true);\n            setGameFinish(true);\n        } else {\n            if (numeroAciertos >= 1) {\n                listaPalabrasUtilizadas.push(randomWord);\n                let nuevaPalabra = palabras[Math.floor(Math.random() * palabras.length)];\n                console.log(nuevaPalabra);\n                while (listaPalabrasUtilizadas.some(v => nuevaPalabra.includes(v))) {\n                    nuevaPalabra = palabras[Math.floor(Math.random() * palabras.length)];\n                }\n                console.log(\"listaPU\", listaPalabrasUtilizadas);\n                console.log(\"nuevaPalabra escogida\");\n                setRandomWord(nuevaPalabra);\n                console.log(randomWord);\n            }\n        }\n    }, [numeroAciertos]);\n\n    useEffect(() => {\n\n        listaPalabrasUtilizadas = [];\n\n        for (let i = 0; i < ref.length; i++) {\n\n            ref[i].current.classList.add(\"text-white\");\n\n            ref[i].current.classList.remove(\"text-primary\");\n\n            ref[i].current.firstChild.classList.add(\"display_none\");\n\n            ref[i].current.firstChild.classList.toggle('flip_card_true');\n\n            for (let i = 0; i < ref.length; i++) {\n                ref[i].current.classList.remove(\"text-white\");\n            }\n\n            for (let i = 0; i < ref.length; i++) {\n                ref[i].current.classList.add(\"pointer_events\");\n            }\n\n            setNoText(\n                [{ id: 1, value: false },\n                { id: 2, value: false },\n                { id: 3, value: false },\n                { id: 4, value: false },\n                { id: 5, value: false },\n                { id: 6, value: false },\n                { id: 7, value: false },\n                { id: 8, value: false },\n                { id: 9, value: false },]);\n\n        }\n\n        try {\n            setTimeout(() => {\n\n                for (let i = 0; i < ref.length; i++) {\n                    for (let i = 0; i < ref.length; i++) {\n                        ref[i].current.classList.add(\"text-primary\");\n\n                        ref[i].current.firstChild.classList.remove(\"display_none\");\n\n                        ref[i].current.firstChild.classList.remove(\"flip_card_true\");\n                    }\n\n                    setNoText(\n                        [{ id: 1, value: true },\n                        { id: 2, value: true },\n                        { id: 3, value: true },\n                        { id: 4, value: true },\n                        { id: 5, value: true },\n                        { id: 6, value: true },\n                        { id: 7, value: true },\n                        { id: 8, value: true },\n                        { id: 9, value: true },]);\n\n                    for (let i = 0; i < ref.length; i++) {\n                        ref[i].current.classList.remove(\"pointer_events\");\n                    }\n\n                }\n            }, 5000);\n        } catch (error) {\n            console.log(error);\n        }\n\n        listaPalabrasUtilizadas = [];\n\n        return () => {\n            clearTimeout();\n        }\n\n    }, [])\n\n    const handleClickButton = (e) => {\n\n        let id = e.target.id;\n        let text = palabras[id - 1];\n        console.log(text);\n\n        const span = e.target.firstChild;\n\n        if (text === randomWord) {\n\n            console.log(\"Acierto\");\n            const object = { id: Number(id), value: false };\n            console.log(object);\n\n            let newArray = [...noText];\n            if (newArray[id - 1].value === false) {\n                return;\n            }\n\n            localStorage.setItem(\"numeroAciertos\", numeroAciertos + 1);\n            console.log(localStorage.getItem(\"numeroAciertos\"));\n            setNumeroAciertos(num => num + 1);\n\n            span.classList.toggle(\"display_none\");\n\n            newArray[id - 1] = object;\n\n            console.log(id - 1);\n\n            setNoText([...newArray]);\n\n            e.target.classList.add(\"text-white\");\n\n            e.target.classList.remove(\"btn-primary\");\n\n            e.target.classList.add(\"btn-success\");\n\n            e.target.classList.remove(\"text-primary\");\n\n            console.log(e.target);\n\n            console.log(noText);\n        } else {\n\n            intentos++;\n\n            listaPalabrasUtilizadas = [];\n\n            setNumeroAciertos(0);\n            localStorage.setItem(\"numeroAciertos\", 0);\n\n            console.log(\"Fallo\");\n            const object = { id: Number(id), value: false };\n            console.log(object);\n\n            let newArray = [...noText];\n            newArray[id - 1] = object;\n\n            console.log(id - 1);\n\n            setNoText([...newArray]);\n\n            e.target.classList.remove(\"btn-primary\");\n\n            e.target.classList.remove(\"text-primary\");\n\n            e.target.classList.add(\"text-white\");\n\n            e.target.classList.add(\"btn-danger\");\n\n            span.classList.add(\"display_none\");\n\n            span.classList.add(\"text-white\");\n\n            span.classList.toggle('flip_card_true');\n\n            // for (let i = 0; i < ref.length; i++) {\n            //     ref[i].current.classList.remove(\"text-white\");\n            // }\n\n            for (let i = 0; i < ref.length; i++) {\n                ref[i].current.classList.add(\"pointer_events\");\n            }\n\n\n            setTimeout(() => {\n\n                try {\n\n                    for (let i = 0; i < ref.length; i++) {\n                        ref[i].current.classList.add(\"text-primary\");\n\n                        ref[i].current.firstChild.classList.remove(\"display_none\");\n\n                        ref[i].current.firstChild.classList.remove(\"flip_card_true\");\n\n                        ref[i].current.classList.remove(\"btn-danger\");\n\n                        ref[i].current.classList.remove(\"btn-success\");\n\n                        ref[i].current.classList.add(\"btn-primary\");\n\n                    }\n\n                    setNoText(\n                        [{ id: 1, value: true },\n                        { id: 2, value: true },\n                        { id: 3, value: true },\n                        { id: 4, value: true },\n                        { id: 5, value: true },\n                        { id: 6, value: true },\n                        { id: 7, value: true },\n                        { id: 8, value: true },\n                        { id: 9, value: true },]);\n\n                    for (let i = 0; i < ref.length; i++) {\n                        ref[i].current.classList.remove(\"pointer_events\");\n                    }\n\n                    listaPalabrasUtilizadas = [];\n\n                } catch (error) {\n                    console.log(error);\n                }\n\n            }, 2000);\n\n        }\n\n    }\n\n    const [noText, setNoText] = useState([\n        { id: 1, value: true },\n        { id: 2, value: true },\n        { id: 3, value: true },\n        { id: 4, value: true },\n        { id: 5, value: true },\n        { id: 6, value: true },\n        { id: 7, value: true },\n        { id: 8, value: true },\n        { id: 9, value: true },\n    ])\n\n    const handleReset = () => {\n        window.location.reload();\n    }\n\n    const ref = useMemo(() => Array(9).fill(0).map(i => React.createRef()), []);\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"text-center mt-2\">Memory Game</h1>\n            <h6 className=\"text-center\"><i>Creado por Christianinsky</i></h6>\n            {\n                !winner && timeLeft > 0 ?\n                    (\n                        <div className=\"text-center mr-auto ml-auto mt-4\">\n                            <button onClick={handleReset} className=\"btn btn-secondary w-auto m-auto mt-3\">\n                                Reiniciar\n                        </button>\n                        </div>\n                    ) : null\n            }\n            { !gameFinish ? (\n                <>\n                    { timeLeft > 0 ? (\n                        <h4 className=\"text-center mt-5\">\n                            Tiempo restante: <Time timeLeft={timeLeft} setTimeLeft={setTimeLeft} />\n                        </h4>) : null\n                    }\n\n                    { timeLeft <= 95 && timeLeft > 0 ? (\n                        <div className=\"text-center mb-3\">Palabra a encontrar: <b>{randomWord}</b></div>\n                    ) : null}\n                    {\n                        timeLeft > 95 ?\n                            (\n                                <div className=\"text-center mb-3\">¡Memoriza las palabras!</div>\n                            ) : null\n                    }\n                </>\n            ) : null}\n            {\n                winner ? (\n                    <>\n                        <h3 className=\"alert alert-success text-center\">¡Has ganado!</h3>\n                        <div className=\"m-auto\">\n                            <img className=\"rounded mx-auto d-block\" src={alien} width=\"250px\" alt=\"alien\" />\n                        </div>\n                    </>\n                ) : null\n            }\n            {\n                !winner && timeLeft <= 0 ? (\n                    <>\n                        <h3 className=\"alert alert-danger text-center\">Has perdido :(</h3>\n                        <div className=\"m-auto\">\n                            <img className=\"rounded mx-auto d-block\" src={pikachu} width=\"250px\" alt=\"pikachu\" />\n                        </div>\n                    </>\n                ) : null\n            }\n            {timeLeft > 0 && !gameFinish ?\n                (\n                    <div className=\"row mt-5\">\n                        <div className=\"col-4 text-center p-1\">\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[0]} id=\"1\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"1\">1</span>\n                                    {noText[0].value ? null : palabras[0]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[3]} id=\"4\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"4\">4</span>\n                                    {noText[3].value ? null : palabras[3]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[6]} id=\"7\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"7\">7</span>\n                                    {noText[6].value ? null : palabras[6]}\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"col-4 text-center p-1\">\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[1]} id=\"2\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"2\">2</span>\n                                    {noText[1].value ? null : palabras[1]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[4]} id=\"5\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"5\">5</span>\n                                    {noText[4].value ? null : palabras[4]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[7]} id=\"8\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"8\">8</span>\n                                    {noText[7].value ? null : palabras[7]}\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"col-4 text-center p-1\">\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[2]} id=\"3\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"3\">3</span>\n                                    {noText[2].value ? null : palabras[2]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[5]} id=\"6\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"6\">6</span>\n                                    {noText[5].value ? null : palabras[5]}\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={handleClickButton} ref={ref[8]} id=\"9\" className=\"btn btn-primary text-primary w-100 mt-1\">\n                                    <span className=\"text-white\" id=\"9\">9</span>\n                                    {noText[8].value ? null : palabras[8]}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                ) :\n                (\n                    <div className=\"text-center mt-5 m-auto\">\n                        <p className=\"mt-3\">\n                            ¿Quieres reiniciar?\n                        </p>\n                        <button onClick={handleReset} className=\"btn btn-info w-auto m-auto mt-2\">\n                            Reiniciar\n                        </button>\n                    </div>\n                )\n            }\n            {\n                timeLeft <= 0 || winner ? (\n                    <div className=\"m-auto w-75\">\n                        <h5 className=\"mt-3\">Puntuación de la partida:</h5>\n                        <div>\n                            <p className=\"mb-2 mt-3\">Tiempo restante: {tiempoRestante} segundos</p>\n                            <p>Intentos: {intentos}</p>\n                        </div>\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Game } from './Game';\n\nlet palabras = [];\n\nexport const Option = () => {\n\n    const [option, setOption] = useState('');\n    const [showContent, setShowContent] = useState(true);\n\n    const handleClickButtonNormal = () => {\n        setOption(\"normal\");\n        setShowContent(false);\n        palabras = [\"Elefante\", \"Caracol\", \"Kira\", \"Coli\", \"León\", \"Mastodonte\", \"Delfín\", \"Perro\", \"Gato\"];\n        shuffle(palabras);\n    }\n\n    const handleClickButtonDificil = () => {\n        setOption(\"dificil\");\n        setShowContent(false);\n        palabras = [\"Cartón\", \"Caracol\", \"Casa\", \"Caramba\", \"Canción\", \"Campeón\", \"Campo\", \"Calipse\", \"Calvo\"];\n        shuffle(palabras);\n    }\n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (0 !== currentIndex) {\n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    return (\n        <>\n            { option === \"normal\" ? (\n                < Game palabras={palabras} />\n            ) : null}\n            { option === \"dificil\" ? (\n                <Game palabras={palabras} />\n            ) : null}\n            {\n                showContent ? (\n                    <div>\n                        <div className=\"container\">\n                            <h1 className=\"text-center mt-2\">Memory Game</h1>\n                            <h6 className=\"text-center\"><i>Creado por Christianinsky</i></h6>\n                            <h6 className=\"text-center mt-4\">Elige una opción</h6>\n                            <div className=\"container\">\n                                <div className=\"row mt-3\">\n                                    <div className=\"col-6 m-auto text-center\">\n                                        <button onClick={handleClickButtonNormal} className=\"btn btn-info\">Normal</button>\n                                    </div>\n                                    <div className=\"col-6 m-auto text-center\">\n                                        <button onClick={handleClickButtonDificil} className=\"btn btn-danger\">Difícil</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null\n            }\n        </>\n    )\n}\n","import React from 'react'\nimport { Option } from './components/Option';\n\nfunction App() {\n    return (\n        <Option />\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}